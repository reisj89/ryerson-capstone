##MongoDB

## Run Server
# $ mongod --dbpath "C:\Program Files\MongoDB\Server\4.0\data"

## Import Data
# $ "C:\Program Files\MongoDB\Server\4.0\bin\mongoimport" --db full --file "G:\RC_2018-08"

## Group posts by author name
db.getCollection('RC_2018-08').aggregate([
    {$group: {_id : "$author", num_posts : {$sum : 1}}},
    {$match: {num_posts: {$gte: 30}}},
    {$sort: {num_posts: -1}},
    {$out: "Candidates"}
], {allowDiskUse: true});
# Results in 681,490 candidate users (select 100)

## Sample 100 users
db.getCollection('Candidates').aggregate([
    { $sample: {size: 100}},
    { $out: 'SelectedUsers'}
]);

## Project big database to required entries
db.getCollection('RC_2018-08').aggregate([
    {$project: {author: 1, body: 1, collapsed: 1, collapsed_reason: 1, 
        controversiality: 1, created_utc: 1, distinguished: 1, edited: 1,
        gilded: 1, id: 1, is_submitter: 1, score: 1, subreddit: 1}},
    {$out: 'RC_reduced'}
])
#This data should now act much like a relational database

## Join 100 users to their comments
db.getCollection('SelectedUsers').aggregate([
    {$lookup: {
        from: 'RC_reduced',
        localField: "_id",
        foreignField: "author",
        as: "comments"}},
    {$out: 'joined'}
]);

## Bring comments to root level
db.getCollection('joined').aggregate([
    {$unwind: '$comments'},
    {$replaceRoot: {newRoot: '$comments'}},
    {$out: 'flattened'}
])

## Create a cleaned database for Python
db.flattened.aggregate([{$out: 'cleaned'}]);